; *****************************************************
; *   SSH connection controller at development server
; *   Version 1.0
; *   Author: quyenlv@dasannetworks.com
; *   Date: September 20th 2014
; *****************************************************
include 'boxConfig.ttl'

; Hide MACRO dialogue box
;show -1

:login
call get_authen_info
if ret=0 then
    yesnobox 'Cannot get authentication information. Input again?' 'Dev Caution'
    if result then
        include 'inputSSH.TTL'
        if ret=0 goto end
        goto login
    else
        end
    endif
endif

; Building connection string
sprintf2 _constr '%s /ssh /2 /auth=password /user=%s /passwd=%s /timeout=10 /F="%s"' _hostaddr _user _passwd window_config

:connect
; Openning SSH conection
connect _constr
if result != 2 then
    yesnobox 'Connection fail. Try again?' 'Dev Caution'
    if result then
        goto login
    else
        goto _end
    endif
endif

; Entering synchronous communication mode (useful in most cases)
setsync 1

; Assigning new title to TeraTerm window
settitle 'Dev65'
setmulticastname 'Dev65'

; Set the shell prompt as an clue to detect
pause 5
call set_prompt

strconcat make_msg #13#10

:main_loop
; Wait for user enter make command
waitln make_msg
mpause 500
sendmulticast 'TTY_BOX' ack_msg 13 10

:waiting
; Wail till finish or any errors occur
; Support make a clue when nearly done by speed up LED blinking
strlen finish_stage_msg
if result > 0 then
    wait sBoxPrompt 'Error 1' #3 finish_stage_msg
else
    wait sBoxPrompt 'Error 1' #3
endif    

; Finish make process. Need to check whether success or not
if result=1 then
    call check_result
    if ret=1 then
        call display_success
    else
        call display_error
    endif
elseif result=2 then
    call display_error
elseif result=3 then
    ; Send CTRL+C to halt the making process
	sendln #3
	call display_error
elseif result=4 then
    sendmulticast 'TTY_BOX' 'FINISH_STAGE' 13 10
    goto waiting
endif

mpause 200
sendmulticast 'TTY_BOX' done_msg 13 10

; Loop for the new make process
goto main_loop

:_end
; Make sure the connection is on before disconnect
testlink
if result= 2 then
    disconnect
    closett
endif
end

; *****************************************************
; *
; *   Function        : set_prompt
; *   Description     : Set prompt for build server
; *   Input           : None
; *   Output          : None
; *
; *****************************************************
:set_prompt

sprintf2 prompt "PS1='\[\e[1;32m\]%s ~$ '" sBoxPrompt
sendln prompt 13 10

return


; *****************************************************
; *
; *   Function        : check_result
; *   Description     : Check the make result after making
; *   Input           : None
; *   Output          : ret (0: error, 1: OK)
; *
; *****************************************************
:check_result

sendln 'echo $?'

flushrecv
waitn 10

strmatch inputstr '0'
if result=0 then
    ret = 0
else
    ret = 1
endif

return


; *****************************************************
; *
; *   Function        : display_error
; *   Description     : Display error pop-up window
; *   Input           : None
; *   Output          : None
; *
; *****************************************************
:display_error

exec 'cmd /c start %comspec% /c "mode 40,10&title Making Status&color 4e&echo.&echo. Build Failed.&echo. Please check the output log!&echo.&echo. Press any keys to exit!&pause>NUL"'

; Send status to TTY Controller
sendmulticast 'TTY_BOX' 'ERROR' 13 10

return


; *****************************************************
; *
; *   Function        : display_success
; *   Description     : Display success pop-up window
; *   Input           : None
; *   Output          : None
; *
; *****************************************************
:display_success

exec 'cmd /c start %comspec% /c "mode 40,10&title Making Status&color 2e&echo.&echo. Build Successfully.&echo.&echo. Press any keys to exit!&pause>NUL"'

; Send status to TTY Controller
sendmulticast 'TTY_BOX' 'SUCCESS' 13 10

return


; *****************************************************
; *
; *   Function        : get_authen_info
; *   Description     : The the authentication information
; *   Input           : None
; *   Output          : ret (0: Not Found, 1: Found)
; *                     _user (string contains the username)
; *                     _passwd (string contains the password)
; *
; *****************************************************
:get_authen_info
ret = 0
filesearch conf_file
if result=1 then
    fileopen fhandle conf_file 0 1
    filestrseek fhandle '[Password]'#13#10
    if result=1 then
        filereadln fhandle _buffer
        strsplit _buffer '='
        _user = groupmatchstr1
        getpassword conf_file _user _passwd
        if result=1 ret=1
    endif
    fileclose fhandle
endif

return